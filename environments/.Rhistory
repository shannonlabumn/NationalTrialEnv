#                           models=c( "additive"),
#                           traits=c("precip"),
#                           params=params,
#                           n.core = 4)
#
# precipThreshYield <- set.threshold(precipYieldGEA, method = "FDR", level = 0.05)
#
# precipSlopeQTL <- get.QTL(data=precipThreshYield, bp.window=5e6)
slopes_pheno <- left_join(geno.names, precipYield.lm) %>% filter(!is.na(precip)) %>% mutate(minTemp = minTempYield.lm$minTemp, maxTemp = maxTempYield.lm$maxTemp) %>% select(-variety)
#precip, minTemp, maxTemp
# write_delim(slopes_pheno, "all_slopes.txt", col_names = F)
precipTrialsObvs
precipYield.lm
precipYield.lm$variety == sort(precipYield.lm$variety)
clear
slopes_pheno
maxTempTrials <- maxTemp %>%
select(Feb:Sep, Location, Year) %>%
pivot_longer(cols = Feb:Sep, names_to = "month", values_to = "maxTemp") %>%
filter(ifelse(Location %in% c("NC", "MO"),
month %in% c("Mar", "Apr", "May", "Jun"),
ifelse(Location %in% c("WI", "ND", "MI", "NY","TX"),
month %in% c("May", "Jun", "Jul", "Aug"),
ifelse(Location %in% c("OR"),
month %in% c("Apr", "May", "Jun", "Jul"),
ifelse(Location %in% c("CA", "FL"),
month %in% c("Feb", "Mar", "Apr", "May"),
NA)))),
Location != "MO",
Year %in% 2014:2020) %>%
group_by(Location, Year) %>%
dplyr::mutate(maxTemp = (maxTemp - 32) * (5/9),
month = factor(month, levels = month.abb))
maxTempSlopeByMonth <- maxTempTrials %>%
unite(trial, c(Year, Location)) %>%
arrange("trial", month) %>%
group_by(trial) %>%
mutate(month = paste("month", 1:n(), sep = "")) %>%
pivot_wider(names_from = "month", values_from = maxTemp)
maxTempTrialsObvs <- pheno %>%
left_join(maxTempSlopeByMonth, by = "trial") %>%
group_by(trial) %>%
filter(yield_total > 0) %>%
dplyr::mutate(normalized_yield = log(yield_total/mean(yield_total, na.rm = T)))
maxTempMonthSlope.lm <- maxTempTrialsObvs %>%
filter(!is.na(normalized_yield)) %>%
group_by(variety) %>%
do({
mod1 = lm(normalized_yield ~ month1, data = .)
mod2 = lm(normalized_yield ~ month2, data = .)
mod3 = lm(normalized_yield ~ month3, data = .)
mod4 = lm(normalized_yield ~ month4, data = .)
data.frame(month1 = coef(mod1)[2],
month2 = coef(mod2)[2],
month3 = coef(mod3)[2],
month4 = coef(mod4)[2])
}) %>%
mutate(variety = factor(variety, levels = geno.names$variety)) %>%
ungroup() %>%
arrange(variety) %>%
select(-variety)
maxTempMonthSlope.lm
minTempMonthSlope.lm <- minTempTrialsObvs %>%
filter(!is.na(normalized_yield)) %>%
group_by(variety) %>%
do({
mod1 = lm(normalized_yield ~ month1, data = .)
mod2 = lm(normalized_yield ~ month2, data = .)
mod3 = lm(normalized_yield ~ month3, data = .)
mod4 = lm(normalized_yield ~ month4, data = .)
data.frame(month1 = coef(mod1)[2],
month2 = coef(mod2)[2],
month3 = coef(mod3)[2],
month4 = coef(mod4)[2])
}) %>%
mutate(variety = factor(variety, levels = geno.names$variety), across(starts_with("month"), ~ as.character)) %>%
ungroup() %>%
arrange(variety) %>%
select(-variety)
minTempTrialsObvs
minTempTrials <- minTemp %>%
select(Feb:Sep, Location, Year) %>%
pivot_longer(cols = Feb:Sep, names_to = "month", values_to = "minTemp") %>%
filter(ifelse(Location %in% c("NC", "MO"),
month %in% c("Mar", "Apr", "May", "Jun"),
ifelse(Location %in% c("WI", "ND", "MI", "NY","TX"),
month %in% c("May", "Jun", "Jul", "Aug"),
ifelse(Location %in% c("OR"),
month %in% c("Apr", "May", "Jun", "Jul"),
ifelse(Location %in% c("CA", "FL"),
month %in% c("Feb", "Mar", "Apr", "May"),
NA)))),
Location != "MO",
Year %in% 2014:2020) %>%
group_by(Location, Year) %>%
dplyr::mutate(minTemp = (minTemp - 32) * (5/9),
month = factor(month, month.abb))
minTempSlopeByMonth <- minTempTrials %>%
unite(trial, c(Year, Location)) %>%
arrange("trial", month) %>%
group_by(trial) %>%
mutate(month = paste("month", 1:n(), sep = "")) %>%
pivot_wider(names_from = "month", values_from = minTemp)
minTempTrialsObvs <- pheno %>%
left_join(minTempSlopeByMonth, by = "trial") %>%
group_by(trial) %>%
filter(yield_total > 0) %>%
dplyr::mutate(normalized_yield = log(yield_total/mean(yield_total, na.rm = T)))
minTempMonthSlope.lm <- minTempTrialsObvs %>%
filter(!is.na(normalized_yield)) %>%
group_by(variety) %>%
do({
mod1 = lm(normalized_yield ~ month1, data = .)
mod2 = lm(normalized_yield ~ month2, data = .)
mod3 = lm(normalized_yield ~ month3, data = .)
mod4 = lm(normalized_yield ~ month4, data = .)
data.frame(month1 = coef(mod1)[2],
month2 = coef(mod2)[2],
month3 = coef(mod3)[2],
month4 = coef(mod4)[2])
}) %>%
mutate(variety = factor(variety, levels = geno.names$variety), across(starts_with("month"), ~ as.character)) %>%
ungroup() %>%
arrange(variety) %>%
select(-variety)
minTempMonthSlope.lm <- minTempTrialsObvs %>%
filter(!is.na(normalized_yield)) %>%
group_by(variety) %>%
do({
mod1 = lm(normalized_yield ~ month1, data = .)
mod2 = lm(normalized_yield ~ month2, data = .)
mod3 = lm(normalized_yield ~ month3, data = .)
mod4 = lm(normalized_yield ~ month4, data = .)
data.frame(month1 = coef(mod1)[2],
month2 = coef(mod2)[2],
month3 = coef(mod3)[2],
month4 = coef(mod4)[2])
}) %>%
mutate(variety = factor(variety, levels = geno.names$variety)) %>%
ungroup() %>%
arrange(variety) %>%
select(-variety)
maxTempYield.lm
minTempMonthSlope.lm
minTempMonthSlope.lm %>% mutate(across(month1:month4) ~as.character(.))
minTempMonthSlope.lm %>% mutate(across(month1:month4), ~as.character(.))
minTempMonthSlope.lm %>% mutate(across(month1:month4, ~as.character(.)))
minTempMonthSlope.lm %>% mutate(across(month1:month4, ~as.character(.))) %>% view()
minTempMonthSlope.lm %>% mutate(across(month1:month4, ~as.integer(.))) %>% view()
format_numeric <- function(x, ...) {
numeric_cols <- vapply(x, is.numeric, logical(1))
x[numeric_cols] <- lapply(x[numeric_cols], format, ...)
x
}
format_numeric(minTempMonthSlope.lm)
format_csv(format_numeric(minTempMonthSlope.lm))
?format
format_csv(format_numeric(minTempMonthSlope.lm, nsmall = 20))
format_csv(format_numeric(minTempMonthSlope.lm, nsmall = 20))[1:100]
minTempMonthSlope.lm
is.numeric(minTempMonthSlope.lm$month1)
format_csv(format_numeric(minTempMonthSlope.lm, scientific = F))
format_delim(format_numeric(minTempMonthSlope.lm, scientific = F))
format_delim(format_numeric(minTempMonthSlope.lm, scientific = F), delim = " ")
write_delim(format_delim(format_numeric(minTempMonthSlope.lm, scientific = F), delim = " "), file = "foo.txt", delim = " ")
write_delim(format_numeric(minTempMonthSlope.lm, scientific = F), file = "foo.txt", delim = " ")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "~/Documents/Experimental/NationalTrialEnv/")
library(ggbiplot)
library(tidyverse)
library(GWASpoly)
source(file = "newReadGWASpoly.fn.R")
library(fuzzyjoin)
library(ggcorrplot)
only_letters <- function(x) { gsub("^([[:alpha:]]*).*$","\\1",x) }
library(cowplot)
source(file = "gemmaPlottingFunction.R")
conflicted::conflict_prefer_all("dplyr", quiet = T)
format_numeric <- function(x, ...) {
numeric_cols <- vapply(x, is.numeric, logical(1))
x[numeric_cols] <- lapply(x[numeric_cols], format, ...)
x
}
slope_genos <- minTempTrialsObvs %>%
ungroup() %>%
filter(!duplicated(variety)) %>%
mutate(variety = factor(variety, levels = geno.names$variety)) %>%
arrange(variety) %>%
pull(variety)
slope_genos <- minTempTrialsObvs %>%
ungroup() %>%
filter(!duplicated(variety)) %>%
mutate(variety = factor(variety, levels = geno.names$variety)) %>%
arrange(variety) %>%
pull(variety)
slope_genos
geno.bimbam %>% select(marker, first, second, all_of(slope_genos)) %>% head()
genoslopes <- geno.bimbam %>% select(marker, first, second, all_of(slope_genos))
############################
#         precip           #
############################
precipTrials <- precip %>%
select(Feb:Sep, Location, Year) %>%
pivot_longer(cols = Feb:Sep, names_to = "month", values_to = "precip") %>%
filter(ifelse(Location %in% c("NC", "MO"),
month %in% c("Mar", "Apr", "May", "Jun"),
ifelse(Location %in% c("WI", "ND", "MI", "NY","TX"),
month %in% c("May", "Jun", "Jul", "Aug"),
ifelse(Location %in% c("OR"),
month %in% c("Apr", "May", "Jun", "Jul"),
ifelse(Location %in% c("CA", "FL"),
month %in% c("Feb", "Mar", "Apr", "May"),
NA)))),
Location != "MO",
Year %in% 2014:2020) %>%
group_by(Location, Year) %>%
dplyr::mutate(precip = precip*2.54,
month = factor(month, levels = month.abb))
precipSlopeByMonth <- precipTrials %>%
unite(trial, c(Year, Location)) %>%
arrange("trial", month) %>%
group_by(trial) %>%
mutate(month = paste("month", 1:n(), sep = "")) %>%
pivot_wider(names_from = "month", values_from = precip)
precipTrialsObvs <- pheno %>%
left_join(precipSlopeByMonth, by = "trial") %>%
group_by(trial) %>%
filter(yield_total > 0) %>%
dplyr::mutate(normalized_yield = log(yield_total/mean(yield_total, na.rm = T)))
precipMonthSlope.lm <- precipTrialsObvs %>%
filter(!is.na(normalized_yield)) %>%
group_by(variety) %>%
do({
mod1 = lm(normalized_yield ~ month1, data = .)
mod2 = lm(normalized_yield ~ month2, data = .)
mod3 = lm(normalized_yield ~ month3, data = .)
mod4 = lm(normalized_yield ~ month4, data = .)
data.frame(month1 = coef(mod1)[2],
month2 = coef(mod2)[2],
month3 = coef(mod3)[2],
month4 = coef(mod4)[2])
}) %>%
mutate(variety = factor(variety, levels = geno.names$variety)) %>%
ungroup() %>%
arrange(variety) %>%
select(-variety)
write_delim(format_numeric(precipMonthSlope.lm, scientific = F),
file = "gemmaGenoPheno/precipSlope.txt",
delim = " ",
col_names = F)
############################
#        maxTemp           #
############################
maxTempTrials <- maxTemp %>%
select(Feb:Sep, Location, Year) %>%
pivot_longer(cols = Feb:Sep, names_to = "month", values_to = "maxTemp") %>%
filter(ifelse(Location %in% c("NC", "MO"),
month %in% c("Mar", "Apr", "May", "Jun"),
ifelse(Location %in% c("WI", "ND", "MI", "NY","TX"),
month %in% c("May", "Jun", "Jul", "Aug"),
ifelse(Location %in% c("OR"),
month %in% c("Apr", "May", "Jun", "Jul"),
ifelse(Location %in% c("CA", "FL"),
month %in% c("Feb", "Mar", "Apr", "May"),
NA)))),
Location != "MO",
Year %in% 2014:2020) %>%
group_by(Location, Year) %>%
dplyr::mutate(maxTemp = (maxTemp - 32) * (5/9),
month = factor(month, levels = month.abb))
maxTempSlopeByMonth <- maxTempTrials %>%
unite(trial, c(Year, Location)) %>%
arrange("trial", month) %>%
group_by(trial) %>%
mutate(month = paste("month", 1:n(), sep = "")) %>%
pivot_wider(names_from = "month", values_from = maxTemp)
maxTempTrialsObvs <- pheno %>%
left_join(maxTempSlopeByMonth, by = "trial") %>%
group_by(trial) %>%
filter(yield_total > 0) %>%
dplyr::mutate(normalized_yield = log(yield_total/mean(yield_total, na.rm = T)))
maxTempMonthSlope.lm <- maxTempTrialsObvs %>%
filter(!is.na(normalized_yield)) %>%
group_by(variety) %>%
do({
mod1 = lm(normalized_yield ~ month1, data = .)
mod2 = lm(normalized_yield ~ month2, data = .)
mod3 = lm(normalized_yield ~ month3, data = .)
mod4 = lm(normalized_yield ~ month4, data = .)
data.frame(month1 = coef(mod1)[2],
month2 = coef(mod2)[2],
month3 = coef(mod3)[2],
month4 = coef(mod4)[2])
}) %>%
mutate(variety = factor(variety, levels = geno.names$variety)) %>%
ungroup() %>%
arrange(variety) %>%
select(-variety)
write_delim(format_numeric(maxTempMonthSlope.lm, scientific = F),
file = "gemmaGenoPheno/maxTempSlope.txt",
delim = " ",
col_names = F)
############################
#        minTemp           #
############################
minTempTrials <- minTemp %>%
select(Feb:Sep, Location, Year) %>%
pivot_longer(cols = Feb:Sep, names_to = "month", values_to = "minTemp") %>%
filter(ifelse(Location %in% c("NC", "MO"),
month %in% c("Mar", "Apr", "May", "Jun"),
ifelse(Location %in% c("WI", "ND", "MI", "NY","TX"),
month %in% c("May", "Jun", "Jul", "Aug"),
ifelse(Location %in% c("OR"),
month %in% c("Apr", "May", "Jun", "Jul"),
ifelse(Location %in% c("CA", "FL"),
month %in% c("Feb", "Mar", "Apr", "May"),
NA)))),
Location != "MO",
Year %in% 2014:2020) %>%
group_by(Location, Year) %>%
dplyr::mutate(minTemp = (minTemp - 32) * (5/9),
month = factor(month, month.abb))
minTempSlopeByMonth <- minTempTrials %>%
unite(trial, c(Year, Location)) %>%
arrange("trial", month) %>%
group_by(trial) %>%
mutate(month = paste("month", 1:n(), sep = "")) %>%
pivot_wider(names_from = "month", values_from = minTemp)
minTempTrialsObvs <- pheno %>%
left_join(minTempSlopeByMonth, by = "trial") %>%
group_by(trial) %>%
filter(yield_total > 0) %>%
dplyr::mutate(normalized_yield = log(yield_total/mean(yield_total, na.rm = T)))
minTempMonthSlope.lm <- minTempTrialsObvs %>%
filter(!is.na(normalized_yield)) %>%
group_by(variety) %>%
do({
mod1 = lm(normalized_yield ~ month1, data = .)
mod2 = lm(normalized_yield ~ month2, data = .)
mod3 = lm(normalized_yield ~ month3, data = .)
mod4 = lm(normalized_yield ~ month4, data = .)
data.frame(month1 = coef(mod1)[2],
month2 = coef(mod2)[2],
month3 = coef(mod3)[2],
month4 = coef(mod4)[2])
}) %>%
mutate(variety = factor(variety, levels = geno.names$variety)) %>%
ungroup() %>%
arrange(variety) %>%
select(-variety)
write_delim(format_numeric(minTempMonthSlope.lm, scientific = F),
file = "gemmaGenoPheno/minTempSlope.txt",
delim = " ",
col_names = F)
slope_genos <- minTempTrialsObvs %>%
ungroup() %>%
filter(!duplicated(variety)) %>%
mutate(variety = factor(variety, levels = geno.names$variety)) %>%
arrange(variety) %>%
pull(variety)
genoslopes <- geno.bimbam %>% select(marker, first, second, all_of(slope_genos))
write_delim(genoslopes, "geno_slopes.txt", col_names = F)
minTempTrialsObvs
minTempTrialsObvs %>% ungroup() %>%
filter(!duplicated(variety)) %>%
separate(trial, into = c("year", "state"), sep = "_") %>%
mutate(variety = factor(variety, levels = geno.names$variety)) %>%
left_join(trialDaylength, by = c("state"))
minTempTrialsObvs %>% ungroup() %>%
filter(!duplicated(variety)) %>%
separate(trial, into = c("year", "state"), sep = "_") %>%
rename(one = month1, two = month2, three = month3, four = month4) %>%
mutate(variety = factor(variety, levels = geno.names$variety)) %>%
left_join(trialDaylength, by = c("state"))
daylength %>%
group_by(state) %>%
mutate(month = paste("month", 1:4, sep = "")) %>%
filter(!state %in% c("ME", "ID", "CO")) %>%
summarise(daylength = mean(daylength))
minTempTrialsObvs %>% ungroup() %>%
filter(!duplicated(variety)) %>%
separate(trial, into = c("year", "state"), sep = "_") %>%
mutate(variety = factor(variety, levels = geno.names$variety)) %>%
left_join(trialDaylength, by = c("state"))
trialDaylength <- daylength %>%
group_by(state) %>%
mutate(month = paste("month", 1:4, sep = "")) %>%
filter(!state %in% c("ME", "ID", "CO")) %>%
summarise(daylength = mean(daylength))
minTempTrialsObvs %>% ungroup() %>%
filter(!duplicated(variety)) %>%
separate(trial, into = c("year", "state"), sep = "_") %>%
mutate(variety = factor(variety, levels = geno.names$variety)) %>%
left_join(trialDaylength, by = c("state"))
daylength %>%
group_by(state) %>%
mutate(month = paste("month", 1:4, sep = "")) %>%
filter(!state %in% c("CA", "FL")) %>%
summarise(daylength = mean(daylength))
daylength %>%
group_by(state) %>%
mutate(month = paste("month", 1:4, sep = "")) %>%
filter(!state %in% c("CA", "FL")) %>%
summarise(daylength = mean(daylength)) %>%
mutate(sel.site = gsub(" ", "", state.name[state.abb %in% state], ))
selSiteDaylength <- daylength %>%
group_by(state) %>%
mutate(month = paste("month", 1:4, sep = "")) %>%
filter(!state %in% c("CA", "FL")) %>%
summarise(daylength = mean(daylength)) %>%
mutate(sel.site = gsub(" ", "", state.name[state.abb %in% state], ))
daylengthSelCov1 <- pheno %>% ungroup() %>%
filter(!duplicated(variety)) %>%
separate(trial, into = c("year", NA), sep = "_") %>%
mutate(year = as.numeric(year), variety = factor(variety, levels = geno.names$variety)) %>%
left_join(selSiteDaylength, by = c("sel.site")) %>%
select(-variety)
which(daylengthSelCov != daylengthSelCov1)
which(daylengthSelCov$daylength != daylengthSelCov1$daylength)
pheno %>% ungroup() %>%
filter(!duplicated(variety)) %>%
separate(trial, into = c("year", NA), sep = "_") %>%
mutate(year = as.numeric(year), variety = factor(variety, levels = geno.names$variety))
pheno %>% ungroup() %>%
filter(!duplicated(variety)) %>%
separate(trial, into = c("year", NA), sep = "_") %>%
mutate(year = as.numeric(year), variety = factor(variety, levels = geno.names$variety)) %>%
left_join(selSiteDaylength, by = c("sel.site"))
selSiteDaylength
state.abb %in% state
selSiteDaylength <- daylength %>%
group_by(state) %>%
mutate(month = paste("month", 1:4, sep = "")) %>%
filter(!state %in% c("CA", "FL")) %>%
summarise(daylength = mean(daylength)) %>%
mutate(sel.site = gsub(" ", "", state.name[state %in% state.abb], ))
state = selSiteDaylength$state
state.name[state.abb %in% state]
state.abb %in% state
which(state %in% state.abb)
which(state.abb %in% state)
state.name[which(state.abb %in% state)]
state
daylength <- tibble(state = sunrise$State, day = sunrise$Day) %>%
cbind((select(sunset, Jan:Dec)) - (select(sunrise, Jan:Dec))) %>%
pivot_longer(Jan:Dec, names_to = "month", values_to = "daylength") %>%
group_by(state, month) %>%
summarise(daylength = mean(daylength, na.rm = T)) %>%
mutate(month = factor(month, levels = month.abb),
daylength = as.integer(daylength)/60) %>%
arrange(state, month) %>%
filter(ifelse(state == "NC",
month %in% c("Mar", "Apr", "May", "Jun"),
ifelse(state %in% c("WI", "MI", "NY", "CO", "TX", "ME"),
month %in% c("May", "Jun", "Jul", "Aug"),
ifelse(state %in% c("ID", "OR"),
month %in% c("Apr", "May", "Jun", "Jul"),
ifelse(state == "ND",
month %in% c("Jun", "Jul", "Aug", "Sep"),
ifelse(state %in% c("CA", "FL"),
month %in% c("Feb", "Mar", "Apr", "May"),
NA))))))
daylength %>%
group_by(state) %>%
mutate(month = paste("month", 1:4, sep = "")) %>%
filter(!state %in% c("CA", "FL")) %>%
summarise(daylength = mean(daylength)) %>%
mutate(sel.site = gsub(" ", "", state.name[which(state.abb %in% state)], ))
state.abb
selSiteDaylength <- daylength %>%
group_by(state) %>%
mutate(month = paste("month", 1:4, sep = ""),
state = factor(state, levels = state.abb)) %>%
arrange(state) %>%
filter(!state %in% c("CA", "FL")) %>%
summarise(daylength = mean(daylength)) %>%
mutate(sel.site = gsub(" ", "", state.name[which(state.abb %in% state)], ))
selSiteDaylength
pheno %>% ungroup() %>%
filter(!duplicated(variety)) %>%
separate(trial, into = c("year", NA), sep = "_") %>%
mutate(year = as.numeric(year), variety = factor(variety, levels = geno.names$variety)) %>%
left_join(selSiteDaylength, by = c("sel.site")) %>%
select(-variety)
daylengthSelCov <- pheno %>% ungroup() %>%
filter(!duplicated(variety)) %>%
separate(trial, into = c("year", NA), sep = "_") %>%
mutate(year = as.numeric(year), variety = factor(variety, levels = geno.names$variety)) %>%
left_join(selSiteDaylength, by = c("sel.site")) %>%
select(daylength)
selCovariate <- cbind(1, daylengthSelCov)
write_delim(selCovariate, "gemmaGenoPheno/selCovariates.txt", col_names = F)
sunrise
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "~/Documents/Experimental/NationalTrialEnv/")
library(ggbiplot)
library(tidyverse)
library(GWASpoly)
source(file = "newReadGWASpoly.fn.R")
library(fuzzyjoin)
library(ggcorrplot)
only_letters <- function(x) { gsub("^([[:alpha:]]*).*$","\\1",x) }
library(cowplot)
source(file = "gemmaPlottingFunction.R")
conflicted::conflict_prefer_all("dplyr", quiet = T)
format_numeric <- function(x, ...) {
numeric_cols <- vapply(x, is.numeric, logical(1))
x[numeric_cols] <- lapply(x[numeric_cols], format, ...)
x
}
rm(list = ls())
new.geno <- read_csv("~/Downloads/ncpt_geno_2023-08-19.csv", show_col_types = F)
