library(devtools)
install_github("jendelman/gwaspoly")
library("GWASpoly", lib.loc="/Library/Frameworks/R.framework/Versions/4.1/Resources/library")
genofile <- system.file("extdata", "new_potato_geno.csv", package = "GWASpoly")
phenofile <- system.file("extdata", "new_potato_pheno.csv", package = "GWASpoly")
library(GWASpoly)
data <- read.GWASpoly(ploidy=4,pheno.file=phenofile,geno.file=genofile,
format="numeric",n.traits=1,delim=",")
data.loco <- set.K(data,LOCO=TRUE,n.core=2)
data.original <- set.K(data,LOCO=FALSE,n.core=2)
data.original <- set.K(data,LOCO=FALSE,n.core=2)
params <- set.params(geno.freq = 1 - 10/957,fixed="env",fixed.type="factor")
print(params)
genofile <- system.file("extdata", "new_potato_geno.csv", package = "GWASpoly")
data.loco <- set.K(data, LOCO = TRUE, n.core = 2)
data.loco <- set.K(data, LOCO = TRUE)
data.original <- set.K(data, LOCO = FALSE)
data.loco.scan <- GWASpoly(data=data.loco,models=c("additive","1-dom"),
traits=c("vine.maturity"),params=params)
library(ggplot2)
qq.plot(data.loco.scan,trait="vine.maturity") + ggtitle(label="LOCO")
data2 <- set.threshold(data.loco.scan,method="Bonferroni",level=0.05)
data2 <- set.threshold(data.loco.scan,method="M.eff",level=0.05)
p <- manhattan.plot(data2,traits="vine.maturity")
p + theme(axis.text.x = element_text(angle=90,vjust=0.5))
manhattan.plot(data2,traits="vine.maturity",chrom="chr05")
p <- LD.plot(data2)
p + xlim(0,30)
qtl <- get.QTL(data=data2,traits="vine.maturity",models="additive",bp.window=5e6)
knitr::kable(qtl)
fit.ans <- fit.QTL(data=data2,trait="vine.maturity",
qtl=qtl[,c("Marker","Model")],
fixed=data.frame(Effect="env",Type="factor"))
knitr::kable(fit.ans,digits=3)
View(data.loco)
read.csv(phenofile)
read.csv(genofile)
geno <- read.csv(genofile)
head(geno)[,1:10]
head(geno)[,1:7]
setwd("/Users/husainagha/Documents/GitHub.nosync/NationalTrialEnv/")
knitr::opts_chunk$set(echo = T)
knitr::opts_chunk$set(root.dir="/Users/husainagha/Documents/GitHub.nosync/NationalTrialEnv/")
library(tidyverse); library(GWASpoly); library(StageWise)
ncpt.list <- lapply(files, function(i){read.csv(i, header = T)})
files <- list.files("./ncpt_field/", full.names = TRUE)
ncpt.list <- lapply(files, function(i){read.csv(i, header = T)})
View(ncpt.list)
View(ncpt.list)
bind_rows((files, .id = "variety"))
bind_rows(files, .id = "variety")
bind_rows(files,)
ncpt.list <- lapply(files, function(i){read_csv(i, header = T)})
ncpt.list <- lapply(files, function(i){read_csv(i)})
bind_rows(files,)
bind_rows(files)
bind_rows(files)
unlist(files)
bind_rows(ncpt.list)
bind_rows(ncpt.list, .id = "variety")
bind_rows(ncpt.list)
nfptFieldData <- read_csv("nfpt_field_data.csv")
spec(ncptFieldData)
ncptFieldData <- bind_rows(ncpt.list)
spec(ncptFieldData)
spec(ncptFieldData)
ncptFieldData %>% select(all(is.na) == F)
ncptFieldData %>% select(all(!is.na()))
ncptFieldData %>% select(all(!is.na(.)))
ncptFieldData[,which(all(is.na(.)))]
which(all(is.na(ncptFieldData)))
for(i in 1:ncol(ncptFieldData){which(all(is.na(ncptFieldData[,i])))}
for(i in 1:ncol(ncptFieldData)){which(all(is.na(ncptFieldData[,i])))}
which(all(is.na(ncptFieldData[,i]))) == T){return(i)}}
which(all(is.na(ncptFieldData[,i])))){return(i)}}
which(all(is.na(ncptFieldData[,i]))){return(i)}}
which(all(is.na(ncptFieldData[,i]))){return(i)}}
which(all(is.na(ncptFieldData[,i]))){return(i)}
which(all(is.na(ncptFieldData[,i])){return(i)}}
if which(all(is.na(ncptFieldData[,i])){return(i)}}
if (which(all(is.na(ncptFieldData[,i]))){return(i)}}
rm(list = ls())
knitr::opts_chunk$set(echo = T)
knitr::opts_chunk$set(root.dir="/Users/husainagha/Documents/GitHub.nosync/NationalTrialEnv/")
library(tidyverse); library(GWASpoly); library(StageWise)
files <- list.files("./ncpt_field/", full.names = TRUE)
ncptList <- lapply(files, function(i){read_csv(i)})
files <- list.files("./ncpt_field/", full.names = TRUE)
ncptList <- lapply(files, function(i){read_csv(i)})
nfptFieldData <- read_csv("nfpt_field_data.csv")
ncptFieldData <- bind_rows(ncpt.list)
ncptFieldData <- bind_rows(ncptList)
View(ncptFieldData)
knitr::opts_chunk$set(echo = T)
knitr::opts_chunk$set(root.dir="/Users/husainagha/Documents/GitHub.nosync/NationalTrialEnv/")
library(tidyverse); library(GWASpoly); library(StageWise)
ncptFieldData[,which(all(is.na(ncptFieldData[,4]))]
ncptFieldData[,which(all(is.na(ncptFieldData[,4])))]
[,which(all(is.na(ncptFieldData[,4])))]
which(all(is.na(ncptFieldData[,4])))
which(all(is.na(ncptFieldData[,5])))
which(all(is.na(ncptFieldData[,6])))
for(i in 1:42){which(all(is.na(ncptFieldData[,i])))}
return(i)}
print(i)}
for(i in 1:42){which(all(is.na(ncptFieldData[,i])))}
for(i in 1:42){array <- append(array, which(all(is.na(ncptFieldData[,i]))))}
View(array)
foo <- array(NULL)
foo <- vector(NULL)
foo <- vector(NA)
foo <- vector(1)
foo <- NULL
for(i in 1:42){foo <- append(foo, which(all(is.na(ncptFieldData[,i]))))}
rm(array)
rm(foo)
rm(i)
rm(files)
View(ncptFieldData)
ncptFieldData <- !duplicated(ncptFieldData)
rm(ncptList)
ncptFieldData <- ncpt[!duplicated(ncptFieldData),}
ncptFieldData <- ncpt[!duplicated(ncptFieldData),]
ncptFieldData <- ncptFieldData[!duplicated(ncptFieldData),]
files <- list.files("./ncpt_field/", full.names = TRUE)
ncptList <- lapply(files, function(i){read_csv(i)})
rm(files)
nfptFieldData <- read_csv("nfpt_field_data.csv")
ncptFieldData <- bind_rows(ncptList)
rm(ncptList)
ncptFieldData <- ncptFieldData[!duplicated(ncptFieldData),]
View(ncptFieldData)
View(nfptFieldData)
View(ncptFieldData)
files <- list.files("./ncpt_field/", full.names = TRUE)
ncptList <- lapply(files, function(i){read_csv(i)})
rm(files)
nfptFieldData <- read_csv("nfpt_field_data.csv")
ncptFieldData <- bind_rows(ncptList)
rm(ncptList)
ncptFieldData <- ncptFieldData[!duplicated(ncptFieldData),5:ncol(ncptFieldData)]
View(ncptFieldData)
files <- list.files("./ncpt_field/", full.names = TRUE)
ncptList <- lapply(files, function(i){read_csv(i)})
rm(files)
nfptFieldData <- read_csv("nfpt_field_data.csv")
files <- list.files("./ncpt_field/", full.names = TRUE)
ncptList <- lapply(files, function(i){read_csv(i)})
rm(files)
nfptFieldData <- read_csv("nfpt_field_data.csv")
ncptFieldData <- bind_rows(ncptList)
rm(ncptList)
ncptFieldData <- ncptFieldData[!duplicated(ncptFieldData),5:ncol(ncptFieldData)]
files <- list.files("./ncpt_field/", full.names = TRUE)
ncptList <- lapply(files, function(i){read_csv(i)})
rm(files)
nfptFieldData <- read_csv("nfpt_field_data.csv")
ncptFieldData <- bind_rows(ncptList)
rm(ncptList)
ncptFieldData <- ncptFieldData[!duplicated(ncptFieldData)]
ncptFieldData <- bind_rows(ncptList)
files <- list.files("./ncpt_field/", full.names = TRUE)
ncptList <- lapply(files, function(i){read_csv(i)})
rm(files)
nfptFieldData <- read_csv("nfpt_field_data.csv")
ncptFieldData <- bind_rows(ncptList)
rm(ncptList)
ncptFieldData <- ncptFieldData[!duplicated(ncptFieldData)]
ncptFieldData <- ncptFieldData[!duplicated(ncptFieldData),]
files <- list.files("./ncpt_field/", full.names = TRUE)
ncptList <- lapply(files, function(i){read_csv(i)})
rm(files)
nfptFieldData <- read_csv("nfpt_field_data.csv")
ncptFieldData <- bind_rows(ncptList)
rm(ncptList)
ncptFieldData <- ncptFieldData[!duplicated(ncptFieldData),]
files <- list.files("./ncpt_field/", full.names = TRUE)
ncptList <- lapply(files, function(i){read_csv(i)})
rm(files)
nfptFieldData <- read_csv("nfpt_field_data.csv")
ncptFieldData <- bind_rows(ncptList)
rm(ncptList)
ncptFieldData <- ncptFieldData[!duplicated(ncptFieldData),]
nFptFieldData <- nfptFieldData[!duplicated(nFptFieldData),]
nfptFieldData <- nfptFieldData[!duplicated(nftFieldData),]
nfptFieldData <- nfptFieldData[!duplicated(nfptFieldData),]
View(nfptFieldData)
ncptFieldData <- ncptFieldData[5:nrow(ncptFieldData),]
nfptFieldData <- nfptFieldData[5:nrow(nfptFieldData),]
View(nfptFieldData)
View(ncptFieldData)
rm(list = ls())
files <- list.files("./ncpt_field/", full.names = TRUE)
ncptList <- lapply(files, function(i){read_csv(i)})
files <- list.files("./ncpt_field/", full.names = TRUE)
ncptList <- lapply(files, function(i){read_csv(i)})
rm(files)
fryFieldData <- read_csv("nfpt_field_data.csv")
knitr::opts_chunk$set(echo = T)
knitr::opts_chunk$set(root.dir="/Users/husainagha/Documents/GitHub.nosync/NationalTrialEnv/")
library(tidyverse); library(GWASpoly); library(StageWise)
files <- list.files("./ncpt_field/", full.names = TRUE)
ncptList <- lapply(files, function(i){read_csv(i)})
rm(files)
fryFieldData <- read_csv("nfpt_field_data.csv")
chipFieldData <- bind_rows(ncptList)
rm(ncptList)
#remove duplicated rows and redundant headers from the NCPT data
chipFieldData <- chipFieldData[!duplicated(chipFieldData),]
chipFieldData <- chipFieldData[5:nrow(chipFieldData),]
#remove duplicated rows and redundant headers from the NFPT data
fryFieldData <- fryFieldData[!duplicated(fryFieldData),]
fryFieldData <- fryFieldData[5:nrow(fryFieldData),]
ncptgeno1 <- read.csv("NCPTgeno1.csv")
ncptgeno2 <- read.csv("NCPTgeno2.csv")
#combine the two genotype datasets for the NCPT
chipGeno <- bind_rows(ncptgeno1, ncptgeno2)
rm(list = c(ncptgeno1, ncptgeno2))
rm(list = clist(ncptgeno1, ncptgeno2))
rm(list = list(ncptgeno1, ncptgeno2))
rm(list(ncptgeno1, ncptgeno2))
rm(c(ncptgeno1, ncptgeno2))
rm(ncptgeno1); rm(ncptgeno2)
View(chipGeno)
